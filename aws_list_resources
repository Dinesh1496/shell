#!/bin/bash

###############################################################################
# Author: dk
# Version: v0.0.1

# Script to automate the process of listing all the resources in an AWS account
#
# Below are the services that are supported by this script:
# 1. EC2
# 2. RDS
# 3. S3
# 4. CloudFront
# 5. VPC
# 6. IAM
# 7. Route53
# 8. CloudWatch
# 9. CloudFormation
# 10. Lambda
# 11. SNS
# 12. SQS
# 13. DynamoDB
# 14. VPC
# 15. EBS
# 16. security groups
#
# The script will prompt the user to enter the AWS region and the service for which the resources need to be listed.
#
# Usage: ./aws_resource_list.sh  <aws_region> <aws_service>
# Example: ./aws_resource_list.sh us-west-1 ec2
#############################################################################

#check if the required number of arguments are passed
if [ $# -ne 2 ];then
    echo "Usage: $0 <aws_region> <aws_service>"
    echo "Example: $0 us-west-1 ec2"
    exit 1
fi

#check if aws cli is installed
if ! command -v aws &> /dev/null; then
    echo "aws cli could not be found"
    exit 1
fi

#check if aws cli is configured
if ! aws configure list &> /dev/null; then
    echo "aws cli is not configured"
    exit 1
fi

#Execute the aws cli command based on the service
case $2 in
    ec2)
        echo "Listing EC2 instances"
        aws ec2 describe-instances --region $1 --query 'Reservations[*].Instances[*].[InstanceId,InstanceType,State.Name,PublicIpAddress,PrivateIpAddress]' --output table
        ;;
    rds)
        echo "Listing RDS instances"
        aws rds describe-db-instances --region $1 --query 'DBInstances[*].[DBInstanceIdentifier,DBInstanceClass,Engine,Endpoint.Address,Endpoint.Port]' --output table
        ;;
    s3)
        echo "Listing S3 buckets"
        aws s3 ls --region $1
        ;;
    cloudfront)
        echo "Listing CloudFront distributions"
        aws cloudfront list-distributions --region $1 --query 'DistributionList.Items[*].[Id,DomainName]' --output table
        ;;
    vpc)
        echo "Listing VPCs"
        aws ec2 describe-vpcs --region $1 --query 'Vpcs[*].[VpcId,CidrBlock]' --output table
        ;;
    iam)
        echo "Listing IAM users"
        aws iam list-users --region $1 --query 'Users[*].[UserName,UserId]' --output table
        ;;
    route53)
        echo "Listing Route53 hosted zones"
        aws route53 list-hosted-zones --region $1 --query 'HostedZones[*].[Id,Name]' --output table
        ;;
    cloudwatch)
        echo "Listing CloudWatch alarms"
        aws cloudwatch describe-alarms --region $1 --query 'MetricAlarms[*].[AlarmName,AlarmArn]' --output table
        ;;
    cloudformation)
        echo "Listing CloudFormation stacks"
        aws cloudformation list-stacks --region $1 --query 'StackSummaries[*].[StackName,StackId]' --output table
        ;;
    lamda)
        echo "Listing Lambda functions"
        aws lambda list-functions --region $1 --query 'Functions[*].[FunctionName,FunctionArn]' --output table
        ;;
    sns)
        echo "Listing SNS topics"
        aws sns list-topics --region $1 --query 'Topics[*].[TopicArn]' --output table
        ;;
    sqs)
        echo "Listing SQS queues"
        aws sqs list-queues --region $1 --query 'QueueUrls[*]' --output table
        ;;
    dynamodb)
        echo "Listing DynamoDB tables"
        aws dynamodb list-tables --region $1 --query 'TableNames[*]' --output table
        ;;
    ebs)
        echo "Listing EBS volumes"
        aws ec2 describe-volumes --region $1 --query 'Volumes[*].[VolumeId,VolumeType,Size]' --output table
        ;;
    securitygroups)
        echo "Listing security groups"
        aws ec2 describe-security-groups --region $1 --query 'SecurityGroups[*].[GroupId,GroupName]' --output table
        ;;
esac
